---
import { getEntry, type CollectionEntry } from 'astro:content'

interface Props {
  programme: CollectionEntry<'editions'>['data']['programme']
}

const { programme } = Astro.props
---

<ul class="-mx-4 my-8 flex flex-col gap-2 font-mono sm:my-12 sm:gap-4">
  <li class="-mb-2 flex gap-2 p-2 italic">
    <p class="flex-1">activities</p>
    <p>starts @</p>
  </li>

  {
    programme &&
      programme.map(async (slot) => {
        const { type, time } = slot

        switch (type) {
          case 'common':
            const { title } = slot

            return (
              <li class="flex items-center gap-2 bg-secondary p-2 text-white drop-shadow-sm">
                <p class="flex-1">{title}</p>
                <time class="w-12 text-right">{time}</time>
              </li>
            )

          case 'talk':
            const { activities } = slot

            return (
              <li class="flex items-center gap-2 px-2">
                {activities.map(async ({ type, activity }) => {
                  if (type === 'talk') {
                    const entry = await getEntry(activity)

                    const { id, data } = entry

                    const [_, slug] = id.split('/')

                    const { title, speaker } = data

                    const name = await getEntry(speaker).then(
                      ({ data }) => data.name,
                    )

                    return (
                      <a class="blok flex-1 transition-opacity hover:opacity-80" href={`/speakers/${slug}`}>
                        <small class="text-prose/60">{name}</small>
                        <p>Talk <span>{'>'}</span> {title ?? 'To Be Announced'}</p>
                      </a>
                    )
                  }

                  if (type === 'workshop') {
                    const entry = await getEntry(activity)

                    const { id, data } = entry

                    const [_, slug] = id.split('/')

                    const { title, organizer } = data

                    const name = await getEntry(organizer).then(
                      ({ data }) => data.name,
                    )

                    return (
                      <a
                        class="blok flex-1 transition-opacity hover:opacity-80"
                        href={`/workshops/${slug}`}>
                        <small class="text-prose/60">{name}</small>
                        <p>{title}</p>
                      </a>
                    )
                  }
                })}

                <time class="w-12 text-right">{time}</time>
              </li>
            )
        }
      })
  }
</ul>
