on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Runs on pushes targeting the default branch
  push:
    branches: [main]

    # Run only when there are changes to `@execut/static`
    paths:
      - packages/static/**

# Ensure only the latest job runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  STATIC_PATH: packages/static

jobs:
  build:
    name: Generate build artifacts

    runs-on: ubuntu-latest

    # Ensure that all commands run in the `packages/static/` directory
    defaults:
      run:
        shell: bash
        working-directory: ./${{ env.STATIC_PATH }}/

    steps:
      - uses: actions/checkout@v3

      - name: Setup `pnpm`
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Setup `node`
        id: deployment
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: pnpm

      # This step will fail if `pnpm-lock.yaml` is missing or an update is needed
      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Generate a production build
        run: |
          pnpm build
        env:
          PUBLIC_API_ENDPOINT: ${{ vars.API_ENDPOINT }}

      # Astro will produce a build in `dist/`
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./${{ env.STATIC_PATH }}/dist/

  deploy:
    needs: build
    name: Deploy to GitHub Pages

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Grant `GITHUB_TOKEN` the permissions required to deploy
    permissions:
      pages: write
      id-token: write

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
